{"version":3,"sources":["components/Nav/logo.png","components/Card/index.js","components/Footer/index.js","components/Grid/index.js","pages/HomePage.js","pages/About.js","components/Nav/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","_ref","icon","title","children","react_default","a","createElement","className","concat","aria-hidden","Footer","Container","fluid","Row","_ref2","Col","_ref3","size","split","map","join","Home","components_Card","components_Footer","Component","About","console","log","logo","Nav","state","open","width","window","innerWidth","updateWidth","newState","_this","setState","toggleNav","src","alt","addEventListener","this","removeEventListener","Link","to","onClick","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","location","pathname","App","BrowserRouter","components_Nav","Switch","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1264b42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.841b402b.png\";","import React from \"react\";\n\nfunction Card({ icon, title, children }) {\n  return (\n    <div className=\"card mt-4\">\n      <div className=\"card-header\">\n        <h3>\n          <strong>\n            <i className={`fa fa-${icon}`} aria-hidden=\"true\" /> {title}\n          </strong>\n        </h3>\n      </div>\n      <div className=\"card-body\">{children}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer>\n      <hr />\n      <p className=\"pull-right\">\n        <i className=\"fab fa-github text-center\" /> Proudly built using React.js\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n// import Jumbotron from \"../components/Jumbotron\";\nimport Card from '../components/Card';\nimport Footer from \"../components/Footer\";\nimport { Col, Row, Container } from \"../components/Grid\";\n\n\nclass Home extends Component {\n  \n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            \n              <h1 className=\"text-center\">\n                <strong>Juan E. Ramirez</strong>\n              </h1>\n              <h2 className=\"text-center\">Search for and Save Books of Interest.</h2>\n              <Card/>\n          </Col>\n          <Col size=\"md-12\">\n            {/* <Card title=\"Book Search\" icon=\"far fa-book\">\n              <Form\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n                q={this.state.q}\n              />\n            </Card> */}\n          </Col>\n        </Row>\n        \n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n// import Jumbotron from \"../components/Jumbotron\";\n\nimport Footer from \"../components/Footer\";\nimport { Col, Row, Container } from \"../components/Grid\";\n\n\nclass About extends Component {\n  \n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            \n              <h1 className=\"text-center\">\n                <strong>Juan E. Ramirez</strong>\n              </h1>\n              <h2 className=\"text-center\">Search for and Save Books of Interest.</h2>\n            \n          </Col>\n          <Col size=\"md-12\">\n            {/* <Card title=\"Book Search\" icon=\"far fa-book\">\n              <Form\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n                q={this.state.q}\n              />\n            </Card> */}\n          </Col>\n        </Row>\n        \n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\n\nclass Nav extends Component {\n  state = {\n    open: false,\n    width: window.innerWidth\n  };\n\n  Header() {\n    // Import result is the URL of your image\n    return <img src={logo} alt=\"Logo\" />;\n  }\n\n  updateWidth = () => {\n    const newState = { width: window.innerWidth };\n\n    if (this.state.open && newState.width > 991) {\n      newState.open = false;\n    }\n\n    this.setState(newState);\n  };\n\n  toggleNav = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWidth);\n  }\n\n  componentWillUnMount() {\n    window.removeEventListener(\"resize\", this.updateWidth);\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\n        <Link className=\"navbar-brand\" to=\"/\">\n        <image src=\"./logo.png\"/>\n          Portfolio\n        </Link>\n        <button\n          onClick={this.toggleNav}\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/\"\n              >\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/about\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/about\"\n              >\n                About Me\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/HomePage\";\nimport About from \"./pages/About\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/jramirez\" component={Home} />\n          <Route exact path=\"/about\" component={About} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}